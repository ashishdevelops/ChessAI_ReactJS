[{"/Users/ashish/Projects/chess_in_react/src/index.js":"1","/Users/ashish/Projects/chess_in_react/src/reportWebVitals.js":"2","/Users/ashish/Projects/chess_in_react/src/App.js":"3","/Users/ashish/Projects/chess_in_react/src/components/Board/Board.js":"4","/Users/ashish/Projects/chess_in_react/src/components/Piece/Piece.js":"5"},{"size":500,"mtime":1610048068948,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610048068949,"results":"8","hashOfConfig":"7"},{"size":174,"mtime":1610152963880,"results":"9","hashOfConfig":"7"},{"size":3896,"mtime":1610154027899,"results":"10","hashOfConfig":"7"},{"size":3741,"mtime":1610153983832,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4hk0kv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/ashish/Projects/chess_in_react/src/index.js",[],["25","26"],"/Users/ashish/Projects/chess_in_react/src/reportWebVitals.js",[],"/Users/ashish/Projects/chess_in_react/src/App.js",[],"/Users/ashish/Projects/chess_in_react/src/components/Board/Board.js",["27"],"import React from 'react'\nimport Piece from '../Piece/Piece.js'\nimport './Board.css'\n\n\nclass Board extends React.Component {\n\n    constructor(props){\n      super(props);\n      this.state = {chosenPiece : '', prevSquare:''};\n      this.referencesMap = new Map();\n    }\n\n    renderSquare(loc) {\n      let sqrRef = React.createRef();\n      return( \n        <div className='Square' onClick= {() => {\n          \n          if(this.state.chosenPiece != ''){\n            sqrRef.current.setState({piece:this.state.chosenPiece})\n            this.setState({chosenPiece:''});\n            console.log(this.referencesMap);\n          }else{\n            this.setState({chosenPiece:sqrRef.current.state.piece});\n            this.setState({prevSquare: loc})\n            sqrRef.current.setState({piece:''})\n          }\n          \n        }}>\n          <Piece value={loc} ref={sqrRef}/>\n        </div>\n        )\n    }\n\n    render() {\n      return (\n        <div className='Board'>\n          <div className='board-row'>\n            {this.renderSquare('A8')}\n            {this.renderSquare('B8')}\n            {this.renderSquare('C8')}\n            {this.renderSquare('D8')}\n            {this.renderSquare('E8')}\n            {this.renderSquare('F8')}\n            {this.renderSquare('G8')}\n            {this.renderSquare('H8')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A7')}\n            {this.renderSquare('B7')}\n            {this.renderSquare('C7')}\n            {this.renderSquare('D7')}\n            {this.renderSquare('E7')}\n            {this.renderSquare('F7')}\n            {this.renderSquare('G7')}\n            {this.renderSquare('H7')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A6')}\n            {this.renderSquare('B6')}\n            {this.renderSquare('C6')}\n            {this.renderSquare('D6')}\n            {this.renderSquare('E6')}\n            {this.renderSquare('F6')}\n            {this.renderSquare('G6')}\n            {this.renderSquare('H6')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A5')}\n            {this.renderSquare('B5')}\n            {this.renderSquare('C5')}\n            {this.renderSquare('D5')}\n            {this.renderSquare('E5')}\n            {this.renderSquare('F5')}\n            {this.renderSquare('G5')}\n            {this.renderSquare('H5')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A4')}\n            {this.renderSquare('B4')}\n            {this.renderSquare('C4')}\n            {this.renderSquare('D4')}\n            {this.renderSquare('E4')}\n            {this.renderSquare('F4')}\n            {this.renderSquare('G4')}\n            {this.renderSquare('H4')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A3')}\n            {this.renderSquare('B3')}\n            {this.renderSquare('C3')}\n            {this.renderSquare('D3')}\n            {this.renderSquare('E3')}\n            {this.renderSquare('F3')}\n            {this.renderSquare('G3')}\n            {this.renderSquare('H3')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A2')}\n            {this.renderSquare('B2')}\n            {this.renderSquare('C2')}\n            {this.renderSquare('D2')}\n            {this.renderSquare('E2')}\n            {this.renderSquare('F2')}\n            {this.renderSquare('G2')}\n            {this.renderSquare('H2')}\n          </div>\n\n          <div className='board-row'>\n            {this.renderSquare('A1')}\n            {this.renderSquare('B1')}\n            {this.renderSquare('C1')}\n            {this.renderSquare('D1')}\n            {this.renderSquare('E1')}\n            {this.renderSquare('F1')}\n            {this.renderSquare('G1')}\n            {this.renderSquare('H1')}\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default Board;","/Users/ashish/Projects/chess_in_react/src/components/Piece/Piece.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":19,"column":37,"nodeType":"36","messageId":"37","endLine":19,"endColumn":39},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["40"],["41"],"no-global-assign","no-unsafe-negation"]